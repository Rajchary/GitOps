name: Building and Configuring webservers
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  
  Build_Configuration:
    name: "Apply Terraform Configuration"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Terraform
    steps:

      - name: Checkout Repo Code
        uses: actions/checkout@v3
      
      - name: Config Terraform plugin cache
        run: |
          echo 'plugin_cache_dir="$HOME/.terraform.d/plugin-cache"' >~/.terraformrc
          mkdir --parents ~/.terraform.d/plugin-cache

      - name: Cache Terraform
        id: cache_terraform
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Properly format the code
        id: fmt
        run: terraform fmt
        
      - name: Init the terraform
        id: init
        if: steps.cache_terraform.outputs.cache-hit != 'true'
        run: terraform init
        
      - name: Apply the Terraform configuration
        id: apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false
  
  Manage_Configuration_Ansible:
    runs-on: ubuntu-latest
    needs: [Build_Configuration]
    environment: AWS
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: write inventory to file
        run: |
          echo ${{ secrets.INVENTORY }} | base64 -d > inventory
          cat inventory

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: 'pip'

      - name: cache pip
        id: cache_pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies Including Ansible
        if: steps.cache_pip.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          name: id_rsa 
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: fail

      - name: Configure Apache on webservers
        run: |
          ansible webservers --list-hosts -i inventory
          ansible-playbook -i inventory ansible/webserver.yml
          ansible-playbook -i inventory ansible/configure_home_server.yml
      - name: Configure webserver files
        run: |
          ansible-playbook -i inventory ansible/configure_products_server.yml