name: Plan and build Terraform configuration
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  Plan_Configuration:
    name: "Plan Terraform Configuration"
    runs-on: ubuntu-latest
    steps:
    
      - name: checkout Repository code
        uses: actions/checkout@v3
     
      - name: Print MetaData
        run: |
          echo "This event was triggered by the user ${{ github.actor }}"
          echo "The triggered event was ${{ github.event_name }}"

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false
          
      - name: Properly format the code
        id: fmt
        run: terraform fmt
        
      - name: Init the terraform
        id: init
        run: terraform init
        
      - name: Plan the Terraform configuration
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan
        continue-on-error: true
        
      - name: Output the plan from previous step
        run: echo -e "The plan details are :\n ${{ steps.plan.outputs.stdout }}"

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
  
  Build_Configuration:
    name: "Apply Terraform Configuration"
    runs-on: ubuntu-latest
    needs: [Plan_Configuration]
    steps:

      - name: Checkout Repo Code
        uses: actions/checkout@v3
      
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false
      - name: Properly format the code
        id: fmt
        run: terraform fmt
        
      - name: Init the terraform
        id: init
        run: terraform init
        
      - name: Apply the Terraform configuration
        id: apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false
      
      - name: 'Terraform Output'
        id: terraform
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'output'
          tf_actions_working_dir: '.'
      
      - name: 'Use Terraform Output'
        run: echo ${{ steps.terraform.outputs.tf_actions_output  }}
      
        
        
#add changes
